# Section04 - 11
# 11 자판기 프로그램

# 커피 자판기
# • 돈을 넣은 후 커피를 구매할 수 있는 자판기 개발
# • 입력값:돈
# • 출력 값 : 커피 출력 문구, 거스름돈, 예) 커피입니다! 거스름돈 0000원
# 커피의 종류 N개 추가(아이스, 따뜻한, 라떼 등)
# • 커피의 수량 입력
# • 커피 재고 기능 추가,재고가 없는 경우 주문불가

# 프로그램 시나리오
# * 커피의 종류를 설정한다
# 1. 자판기에 대한 설명을 출력한다.
# 2. 사용자에게 현금을 입력 받는다.
# 3. 커피의 종류, 수량 입력받는다
# 4. 커피, 거스름돈 출력
# * dict 사용

# * 커피의 종류를 설정한다
items_dict = {
    '믹스커피': {
        '가격': 600,
        '재고': 10
    },
    '차가운 아메리카노' : {
        '가격': 1500,
        '재고': 40
    },
    '따뜻한 아메리카노' : {
        '가격': 1000,
        '재고': 20
    }
}

# 1. 자판기에 대한 설명을 출력한다.
print('[고려대학교] 음료 자판기')
while True:
    print(f'''
    상품 목록
    상품 번호 - 상품명 - 상품 금액 - 상품 재고
    1. 믹스커피 - {items_dict['믹스커피']['가격']}원 - {items_dict['믹스커피']['재고']}개
    2. 차가운 아메리카노 - 1500원
    3. 따뜻한 아메리카노 - 1000원

    현금을 투입해주세요.
    ''')

    # 2. 사용자에게 현금을 입력 받는다.
    num = int(input('현금을 투입해주세요 : '))

    # 3. 커피의 종류, 수량 입력받는다
    item = input('커피의 종류를 입력해주세요 : ')
    su = int(input('구매하고자 하는 커피의 수량을 입력해주세요 : '))

    # 4. 커피, 거스름돈 출력
    if items_dict[item]['재고'] >= su:
        result = num - (items_dict[item]['가격'] * su)
        items_dict[item]['재고'] = items_dict[item]['재고'] - su
        print(item, su, '잔 나왔습니다. 잔돈 : ', result)
    else:
        print('수량이 부족합니다.', item, su)

    is_break = input('추가 구매를 원하시면 Y를 입력해주세요')
    # if not(is_break in ['y', 'Y']):
    if is_break not in ['y', 'Y']:
        break
